{"version":3,"sources":["components/layout/Footer.tsx","components/layout/Header.tsx","components/layout/Layout.tsx","pages/Home.tsx","pages/Login.tsx","data/quizzesData/React.ts","data/QuizDataProvider.ts","hooks/useWindowSize.ts","pages/Quiz.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","className","Header","username","end","start","to","Layout","children","style","minHeight","Home","navigate","useNavigate","map","t","footer","label","onClick","title","Login","loginHandler","useState","setUsername","htmlFor","id","type","value","onChange","e","target","disabled","length","data","question","answer","getQuizData","quizName","reactQuiz","Error","console","log","useWindowSize","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Quiz","index","setIndex","questions","setQuestions","answers","setAnswers","params","useParams","name","steps","i","push","handleQuestionAnswer","a","getScore","totalScore","model","activeIndex","App","user","setUser","loading","setLoading","localStorage","getItem","JSON","parse","path","element","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ee8e8e9.chunk.js","sourcesContent":["import { FC } from \"react\";\r\n\r\nconst Footer: FC = () => {\r\n  return (\r\n    <>\r\n      <p className=\"p-text-center\">Made by Ondrej Belza</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { FC } from \"react\";\r\nimport { Menubar } from \"primereact/menubar\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header: FC<{\r\n  username: string | undefined;\r\n}> = ({ username }) => {\r\n  const end = <>{username && <span className=\"p-mr-2\">{username}</span>}</>;\r\n  return (\r\n    <>\r\n      <Menubar\r\n        className=\"menu\"\r\n        start={\r\n          <>\r\n            <Link to=\"/\">\r\n              <span className=\"p-ml-2 p-text-bold \">Quiz app</span>\r\n            </Link>\r\n          </>\r\n        }\r\n        end={end}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FC } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport \"./Layout.css\";\r\n\r\nconst Layout: FC<{\r\n  username: string | undefined;\r\n}> = ({ children, username }) => {\r\n  return (\r\n    <>\r\n      <div className=\"p-d-flex p-flex-column\" style={{ minHeight: \"100vh\" }}>\r\n        <div>\r\n          <Header username={username} />\r\n        </div>\r\n        <div className=\"content\"> {children}</div>\r\n        <div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Button } from \"primereact/button\";\r\nimport { Card } from \"primereact/card\";\r\nimport { FC } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nconst Home: FC = () => {\r\n  let navigate = useNavigate();\r\n  const topics = [\"React\"];\r\n  return (\r\n    <div>\r\n      <div className=\"p-grid p-justify-center\">\r\n        <div className=\"p-col-8\">\r\n          <div className=\"p-grid\">\r\n            {topics.map((t) => {\r\n              let footer = (\r\n                <>\r\n                  <Button\r\n                    label=\"Start quiz!\"\r\n                    onClick={() => navigate(\"/quiz/\" + t)}\r\n                  />\r\n                </>\r\n              );\r\n              return (\r\n                <div className=\"p-col-3\" key={t}>\r\n                  <Card title={t} className=\"p-m-2\" footer={footer} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { FC, useState } from \"react\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\nconst Login: FC<{\r\n  loginHandler: (username: string) => void;\r\n}> = ({ loginHandler }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <div className=\"p-grid p-dir-col p-align-center\">\r\n        <div className=\"p-col-4\">\r\n          <h4>Login</h4>\r\n        </div>\r\n        <div className=\"p-col-4\">\r\n          <div className=\"p-fluid p-align-start p-justify-start\">\r\n            <div className=\"p-field\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <InputText\r\n                id=\"username\"\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              label=\"Login\"\r\n              disabled={!username.length}\r\n              onClick={() => loginHandler(username)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","const data = [\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n  {\r\n    question: \"Is react good framework?\",\r\n    answer: true,\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import reactQuiz from \"./quizzesData/React\";\r\n\r\nconst getQuizData = (quizName: string) => {\r\n  let data: { question: string; answer: boolean }[] = [];\r\n\r\n  switch (quizName) {\r\n    case \"React\":\r\n      data = reactQuiz;\r\n      break;\r\n    default:\r\n      throw new Error(\"Invalid quiz name\");\r\n  }\r\n  console.log(data);\r\n  return data;\r\n};\r\n\r\nexport default getQuizData;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowSize = () => {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<{\r\n    width: number | undefined;\r\n    height: number | undefined;\r\n  }>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Steps } from \"primereact/steps\";\r\nimport getQuizData from \"../data/QuizDataProvider\";\r\nimport { Button } from \"primereact/button\";\r\nimport Confetti from \"react-confetti\";\r\nimport useWindowSize from \"../hooks/useWindowSize\";\r\n\r\nconst Quiz: FC = () => {\r\n  const [index, setIndex] = useState(0);\r\n  const { width, height } = useWindowSize();\r\n  const [questions, setQuestions] = useState<\r\n    { question: string; answer: boolean }[]\r\n  >([]);\r\n\r\n  const [answers, setAnswers] = useState<boolean[]>([]);\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log(params);\r\n    if (!params.name) navigate(\"/\");\r\n\r\n    setQuestions(getQuizData(params.name as string));\r\n  }, [params, navigate]);\r\n\r\n  const steps: { label: string }[] = [];\r\n  for (let i = 1; i < 11; i++) {\r\n    steps.push({ label: \"\" });\r\n  }\r\n\r\n  const handleQuestionAnswer = (answer: boolean) => {\r\n    setAnswers((a) => [...a, answer]);\r\n    setIndex((i) => i + 1);\r\n  };\r\n\r\n  const getScore = () => {\r\n    let totalScore = 0;\r\n    for (let i = 0; i < 10; i++) {\r\n      if (questions[i].answer === answers[i]) totalScore++;\r\n    }\r\n    return totalScore;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-grid p-justify-center\">\r\n        <div className=\"p-col-8\">\r\n          <Steps model={steps} activeIndex={index} className=\"p-mt-2\" />\r\n        </div>\r\n      </div>\r\n      {questions && questions.length && (\r\n        <>\r\n          {index < 10 ? (\r\n            <div className=\"p-grid p-dir-col p-align-center\">\r\n              <div className=\"p-col-8\">\r\n                <h3 className=\"p-text-center\">Question {index + 1}</h3>\r\n                <p className=\"p-text-center\">{questions[index].question}</p>\r\n              </div>\r\n\r\n              <div className=\"p-col-8 p-d-flex p-jc-evenly\">\r\n                <Button\r\n                  label=\"true\"\r\n                  onClick={() => handleQuestionAnswer(true)}\r\n                />\r\n                <Button\r\n                  label=\"false\"\r\n                  onClick={() => handleQuestionAnswer(false)}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <h2 className=\"p-text-center\">Your result</h2>\r\n              <p className=\"p-text-center\">{getScore()}/10</p>\r\n              <div className=\"p-d-flex p-jc-center\">\r\n                <Button label=\"Go back\" onClick={() => navigate(\"/\")} />\r\n              </div>\r\n              {getScore() >= 7 && <Confetti width={width} height={height} />}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Routes, Route } from \"react-router\";\nimport \"./App.css\";\nimport Layout from \"./components/layout/Layout\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Quiz from \"./pages/Quiz\";\nimport User from \"./types/User\";\n\nfunction App() {\n  const [user, setUser] = useState<User>();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    var value = localStorage.getItem(\"user\");\n    if (value) {\n      const user: User = JSON.parse(value);\n      setUser(user);\n    }\n\n    setLoading(false);\n  }, [setUser]);\n\n  const loginHandler = (username: string) => {\n    localStorage.setItem(\"user\", JSON.stringify({ username }));\n    setUser({ username });\n  };\n\n  if (loading) return <> loading... </>;\n  return (\n    <div className=\"App\">\n      <Layout username={user?.username}>\n        {!user ? (\n          <Routes>\n            <Route path=\"/\" element={<Login loginHandler={loginHandler} />} />\n          </Routes>\n        ) : (\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/quiz/:name\" element={<Quiz />} />{\" \"}\n            <Route path=\"*\" element={<Home />} />\n          </Routes>\n        )}\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"primereact/resources/themes/lara-dark-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}